type Query {
    "Lista de productos de la tienda"
    products (
        "Página seleccionada para acceder a ella"
        page: Int = 1,
        "Products de la tienda (juegos) que se obtendrán por página"
        itemsPerPage: Int = 20,
        "Especificar el estado del product que queremos mostrar"
        active: ActiveFilterEnum = ACTIVE): ResultProductItem


    productDetails(id: ID!): ResultProductItem

    productSearch(
        page: Int = 1
        itemsPerPage: Int = 20
        active: ActiveFilterEnum = ACTIVE 
        value: String
        categoriasId: [ID] ): ResultProductItem

    productsOffersLast (
        "Página seleccionada para acceder a ella"
        page: Int = 1,
        "Products de la tienda (juegos) que se obtendrán por página"
        itemsPerPage: Int = 20,
        "Especificar el estado del product que queremos mostrar"
        active: ActiveFilterEnum = ACTIVE,
        "Tope del precio para considerar como oferta"
        topPrice: Float = -1,
        "Seleccionar los elementos de manera aleatoria"
        random: Boolean = false): ResultProductItem

    productsCategorias(
        "Página seleccionada para acceder a ella"
        page: Int = 1,
        "Products de la tienda (juegos) que se obtendrán por página"
        itemsPerPage: Int = 20,
        "Especificar el estado del product que queremos mostrar"
        active: ActiveFilterEnum = ACTIVE,
        "Especificar las platformas seleccionadas"
        categorias: [ID]): ResultProductItem

}